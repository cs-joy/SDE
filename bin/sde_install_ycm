#! /usr/bin/env bash

# __START_OF_LICENSE__
# 
# Copyright (c) 2017, 2018 Michael D. Adams
# All rights reserved.
# 
# This file is part of the SDE software.
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3,
# or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program; see the file LICENSE.  If not,
# see <http://www.gnu.org/licenses/>.
# 
# __END_OF_LICENSE__

#set -xv

# Reference: https://valloric.github.io/YouCompleteMe

panic()
{
	echo "ERROR: $@"
	exit 1
}

perform_cleanup()
{
	if [ -n "$tmp_dir" -a -d "$tmp_dir" ]; then
		rm -rf "$tmp_dir" || \
		  echo "warning: cannot remove temporary directory $tmp_dir"
	fi
}

usage()
{
	echo "BAD USAGE: $@"
	cat <<- EOF
	usage:
	$0 -d \$install_dir [-v \$version]

	options:
	-d \$install_dir
	    Set the installation directory to \$install_dir.
	-v \$version
	    Set the version (i.e., branch/commit) to install.
	    e.g., 31abb9cee59d5f74bbff14b6107e9c9316b6fc83
	-l \$libclang
	    Use the external version of libclang given by \$libclang.
	EOF
	exit 2
}

user=$(whoami) || panic "cannot get user name"
host=$(hostname) || panic "cannot get host name"
cur_dir=$(pwd) || panic "cannot get current directory"

tmp_dir_template="${SDE_TMPDIR:-/tmp}/sde_install_ycm-$user-$host-XXXXXXXX"

version=master
install_dir=
libclang=
verbose=0
cleanup=1

while getopts Cd:v:l:V opt; do
	case "$opt" in
	C)
		cleanup=0;;
	d)
		install_dir="$OPTARG";;
	v)
		version="$OPTARG";;
	l)
		libclang="$OPTARG";;
	V)
		verbose=$((verbose + 1));;
	\?)
		usage
		break;;
	esac
done
shift $((OPTIND - 1))

if [ -z "$install_dir" ]; then
	usage "no installation directory specified"
fi
if [ -z "$version" ]; then
	usage "no version specified"
fi

# Set the user file-creation mask to allow read and execute permissions
# for the group and others.
# This will help to increase the likelihood that the installed software
# will be accessible by all users.
umask 022

tmp_dir=$(mktemp -d "$tmp_dir_template") || \
  panic "cannot create temporary directory"
echo "temporary directory: $tmp_dir"
if [ "$cleanup" -ne 0 ]; then
	trap perform_cleanup EXIT
fi

top_dir="$tmp_dir/ycm-$version"

src_dir="$install_dir/YouCompleteMe"
#build_dir="$top_dir/build"
build_dir="$install_dir/build"
misc_dir="$install_dir/misc"

example_file="$src_dir/third_party/ycmd/examples/.ycm_extra_conf.py"

for dir in "$top_dir" "$src_dir" "$build_dir" "$misc_dir"; do
	if [ ! -d "$dir" ]; then
		mkdir -p "$dir" || panic "cannot make directory $dir"
	fi
done

ycm_url="https://github.com/Valloric/YouCompleteMe.git"

if [ "$verbose" -ge 1 ]; then
	echo "############################################################"
	echo "repository $ycm_url"
	echo "commit/tag/branch $version"
	if [ -n "$libclang" ]; then
		echo "using libclang $libclang"
	fi
	echo "############################################################"
fi

git clone "$ycm_url" "$src_dir" || \
  panic "cannot clone repo"

(cd "$src_dir" && git checkout "$version") || \
  panic "cannot clone repo"

(cd "$src_dir" && git submodule update --init --recursive) || \
  panic "cannot submodule update"

if [ ! -e "$example_file" ]; then
	panic "example file is missing"
fi

cmake_opts=()
cmake_opts+=(-DUSE_CLANG_COMPLETER=on)
#cmake_opts+=(-DUSE_SYSTEM_LIBCLANG=on)
if [ -n "$libclang" ]; then
	if [ ! -f "$libclang" ]; then
		panic "libclang does not exist $libclang"
	fi
	cmake_opts+=(-DEXTERNAL_LIBCLANG_PATH=$libclang)
fi
(cd "$build_dir" && \
  cmake "${cmake_opts[@]}" "$src_dir/third_party/ycmd/cpp") || \
  panic "cmake failed"

(cd "$build_dir" && cmake --build . --target ycm_core --config Release) || \
  panic

cp "$example_file" "$misc_dir/ycm_extra_conf.py" || \
  panic "cannot copy file"

echo "temporary directory: $tmp_dir"
echo "need to install watchdog now"
