#! /usr/bin/env bash

# __START_OF_LICENSE__
# 
# Copyright (c) 2017, 2018 Michael D. Adams
# All rights reserved.
# 
# This file is part of the SDE software.
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3,
# or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program; see the file LICENSE.  If not,
# see <http://www.gnu.org/licenses/>.
# 
# __END_OF_LICENSE__

panic()
{
	echo "FATAL ERROR: $@" 1>&2
	exit 1
}

eprint()
{
	echo "$@" 1>&2
}

debug_level=${SDE_DEBUG_LEVEL:-0}
#debug_level=1

cmd_dir=`dirname $0` || panic "cannot get command directory"
cmd_name=$(basename "$0")

case "$cmd_name" in

c++|g++)
	if [ -z "$SDE_GCC_CXX_PROGRAM" ]; then
		panic "SDE_GCC_CXX_PROGRAM not set"
	fi
	if [ ! -x "$SDE_GCC_CXX_PROGRAM" ]; then
		panic "no execute permission on file $SDE_GCC_CXX_PROGRAM"
	fi
	command="$SDE_GCC_CXX_PROGRAM"
	if [ ${SDE_GCC_CXX_TRANSFORM:-0} -ne 0 ]; then
		args=()
		if [ -n "$SDE_GCC_CXX_OPTIONS_PREFIX" ]; then
			args+=($SDE_GCC_CXX_OPTIONS_PREFIX)
		fi
		args+=("$@")
		if [ -n "$SDE_GCC_CXX_OPTIONS_SUFFIX" ]; then
			args+=($SDE_GCC_CXX_OPTIONS_SUFFIX)
		fi
		export CPATH="$SDE_GCC_INC_PATH"
		export C_INCLUDE_PATH="$SDE_GCC_C_INC_PATH"
		export CPLUS_INCLUDE_PATH="$SDE_GCC_CPP_INC_PATH"
		export LIBRARY_PATH="$SDE_GCC_LIB_PATH"
	else
		args+=("$@")
	fi
	;;

cc|gcc)
	if [ -z "$SDE_GCC_C_PROGRAM" ]; then
		panic "SDE_GCC_C_PROGRAM not set"
	fi
	if [ ! -x "$SDE_GCC_C_PROGRAM" ]; then
		panic "no execute permission on file $SDE_GCC_C_PROGRAM"
	fi
	command="$SDE_GCC_C_PROGRAM"
	if [ ${SDE_GCC_C_TRANSFORM:-0} -ne 0 ]; then
		args=()
		if [ -n "$SDE_GCC_C_OPTIONS_PREFIX" ]; then
			args+=($SDE_GCC_C_OPTIONS_PREFIX)
		fi
		args+=("$@")
		if [ -n "$SDE_GCC_C_OPTIONS_SUFFIX" ]; then
			args+=($SDE_GCC_C_OPTIONS_SUFFIX)
		fi
		export CPATH="$SDE_GCC_INC_PATH"
		export C_INCLUDE_PATH="$SDE_GCC_C_INC_PATH"
		export CPLUS_INCLUDE_PATH="$SDE_GCC_CPP_INC_PATH"
		export LIBRARY_PATH="$SDE_GCC_LIB_PATH"
	else
		args+=("$@")
	fi

	;;

clang++)
	if [ -z "$SDE_CLANG_CXX_PROGRAM" ]; then
		panic "SDE_CLANG_CXX_PROGRAM not set"
	fi
	if [ ! -x "$SDE_CLANG_CXX_PROGRAM" ]; then
		panic "no execute permission on file $SDE_CLANG_CXX_PROGRAM"
	fi
	command="$SDE_CLANG_CXX_PROGRAM"
	if [ ${SDE_CLANG_CXX_TRANSFORM:-0} -ne 0 ]; then
		args=()
		if [ -n "$SDE_CLANG_CXX_OPTIONS_PREFIX" ]; then
			args+=($SDE_CLANG_CXX_OPTIONS_PREFIX)
		fi
		args+=("$@")
		if [ -n "$SDE_CLANG_CXX_OPTIONS_SUFFIX" ]; then
			args+=($SDE_CLANG_CXX_OPTIONS_SUFFIX)
		fi
		export CPATH="$SDE_CLANG_INC_PATH"
		export C_INCLUDE_PATH="$SDE_CLANG_C_INC_PATH"
		export CPLUS_INCLUDE_PATH="$SDE_CLANG_CPP_INC_PATH"
		export LIBRARY_PATH="$SDE_CLANG_LIB_PATH"
	else
		args+=("$@")
	fi
	;;

clang)
	if [ -z "$SDE_CLANG_C_PROGRAM" ]; then
		panic "SDE_CLANG_C_PROGRAM not set"
	fi
	if [ ! -x "$SDE_CLANG_C_PROGRAM" ]; then
		panic "no execute permission on file $SDE_CLANG_C_PROGRAM"
	fi
	command="$SDE_CLANG_C_PROGRAM"
	if [ ${SDE_CLANG_C_TRANSFORM:-0} -ne 0 ]; then
		args=()
		if [ -n "$SDE_CLANG_C_OPTIONS_PREFIX" ]; then
			args+=($SDE_CLANG_C_OPTIONS_PREFIX)
		fi
		args+=("$@")
		if [ -n "$SDE_CLANG_C_OPTIONS_SUFFIX" ]; then
			args+=($SDE_CLANG_C_OPTIONS_SUFFIX)
		fi
		export CPATH="$SDE_CLANG_INC_PATH"
		export C_INCLUDE_PATH="$SDE_CLANG_C_INC_PATH"
		export CPLUS_INCLUDE_PATH="$SDE_CLANG_CPP_INC_PATH"
		export LIBRARY_PATH="$SDE_CLANG_LIB_PATH"
	else
		args+=("$@")
	fi
	;;

gccgo)
	if [ -z "$SDE_GCC_GCCGO_PROGRAM" ]; then
		panic "SDE_GCC_GCCGO_PROGRAM not set"
	fi
	if [ ! -x "$SDE_GCC_GCCGO_PROGRAM" ]; then
		panic "no execute permission on file $SDE_GCC_GCCGO_PROGRAM"
	fi
	command="$SDE_GCC_GCCGO_PROGRAM"
	if [ ${SDE_GCC_GCCGO_TRANSFORM:-0} -ne 0 ]; then
		args=()
		if [ -n "$SDE_GCC_GCCGO_OPTIONS_PREFIX" ]; then
			args+=($SDE_GCC_GCCGO_OPTIONS_PREFIX)
		fi
		args+=("$@")
		if [ -n "$SDE_GCC_GCCGO_OPTIONS_SUFFIX" ]; then
			args+=($SDE_GCC_GCCGO_OPTIONS_SUFFIX)
		fi
		export CPATH="$SDE_GCC_INC_PATH"
		export C_INCLUDE_PATH="$SDE_GCC_C_INC_PATH"
		export CPLUS_INCLUDE_PATH="$SDE_GCC_CPP_INC_PATH"
		export LIBRARY_PATH="$SDE_GCC_LIB_PATH"
	else
		args+=("$@")
	fi
	;;

go)
	if [ -z "$SDE_GCC_GO_PROGRAM" ]; then
		panic "SDE_GCC_GO_PROGRAM not set"
	fi
	if [ ! -x "$SDE_GCC_GO_PROGRAM" ]; then
		panic "no execute permission on file $SDE_GCC_GO_PROGRAM"
	fi
	command="$SDE_GCC_GO_PROGRAM"
	if [ ${SDE_GCC_GO_TRANSFORM:-0} -ne 0 ]; then
		export LD_RUN_PATH="$LD_LIBRARY_PATH"
		args=()
		if [ -n "$SDE_GCC_GO_OPTIONS_PREFIX" ]; then
			args+=($SDE_GCC_GO_OPTIONS_PREFIX)
		fi
		args+=("$@")
		if [ -n "$SDE_GCC_GO_OPTIONS_SUFFIX" ]; then
			args+=($SDE_GCC_GO_OPTIONS_SUFFIX)
		fi
		export CPATH="$SDE_GCC_INC_PATH"
		export C_INCLUDE_PATH="$SDE_GCC_C_INC_PATH"
		export CPLUS_INCLUDE_PATH="$SDE_GCC_CPP_INC_PATH"
		export LIBRARY_PATH="$SDE_GCC_LIB_PATH"
	else
		args+=("$@")
	fi
	;;

cmake)
	if [ -z "$SDE_CMAKE_PROGRAM" ]; then
		panic "SDE_CMAKE_PROGRAM not set"
	fi
	if [ ! -x "$SDE_CMAKE_PROGRAM" ]; then
		panic "no execute permission on file $SDE_CMAKE_PROGRAM"
	fi
	command="$SDE_CMAKE_PROGRAM"
	if [ ${SDE_CMAKE_TRANSFORM:-0} -ne 0 ]; then
		args=()
		args+=("$@")
		export CMAKE_PREFIX_PATH="$SDE_CMAKE_PATH_PREFIX"
	else
		args+=("$@")
	fi
	;;

cpack|ctest)
	if [ -z "$SDE_CMAKE_PROGRAM" ]; then
		panic "SDE_CMAKE_PROGRAM not set"
	fi
	if [ ! -x "$SDE_CMAKE_PROGRAM" ]; then
		panic "no execute permission on file $SDE_CMAKE_PROGRAM"
	fi
	cmake_dir=$(dirname "$SDE_CMAKE_PROGRAM") || \
	  panic "cannot get directory name for $SDE_CMAKE_PROGRAM"
	command="$cmake_dir/$cmd_name"
	args=()
	args+=("$@")
	# Note: Is this needed?
	#export CMAKE_PREFIX_PATH="$SDE_CMAKE_PREFIX_PATH"
	;;

gdb)
	if [ -z "$SDE_GDB_PROGRAM" ]; then
		panic "SDE_GDB_PROGRAM not set"
	fi
	if [ ! -x "$SDE_GDB_PROGRAM" ]; then
		panic "no execute permission on file $SDE_GDB_PROGRAM"
	fi
	command="$SDE_GDB_PROGRAM"
	args=()
	args+=("$@")
	;;

esac

if [ "$debug_level" -ge 1 ]; then
	eprint "Running $command ${args[@]}"
fi
exec "$command" "${args[@]}"
